services:
  # spark-app:
  #   build:
  #     context: .        # Chính là thư mục chứa src, Dockerfile, build.gradle,...
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8085:8085"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   container_name: spark-demo-container
  #   networks:
  #     - app-network
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: spark_demo_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - app-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:password@postgres:5432/spark_demo_db?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - app-network

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    command: --kafka.server=kafka:29092
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    networks:
      - app-network

  # Apache Spark Master
  spark-master:
    image: bitnami/spark:3.4.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_METRICS_CONF=/opt/spark/conf/metrics.properties
    volumes:
        - ./spark/metrics.properties:/opt/spark/conf/metrics.properties
    ports:
      - "8082:8080"  # Spark Web UI
      - "7077:7077"  # Master port
    networks:
      - app-network

  # Apache Spark Worker
  spark-worker:
    image: bitnami/spark:3.4.0
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_METRICS_CONF=/opt/spark/conf/metrics.properties
    volumes:
        - ./spark/metrics.properties:/opt/spark/conf/metrics.properties
    ports:
      - "8081:8081"  # Worker Web UI
    networks:
      - app-network

  # Service để tạo dữ liệu mẫu trong PostgreSQL
  data-generator:
    image: python:3.9-slim
    container_name: data-generator
    depends_on:
      - postgres
    volumes:
      - ./scripts:/scripts
    command: >
      sh -c "pip install psycopg2-binary && python /scripts/generate_data.py"
    networks:
      - app-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network



volumes:
  postgres-data:
  grafana-data:

networks:
  app-network:
    driver: bridge